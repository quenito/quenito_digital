#!/usr/bin/env python3
"""
Script to set up the reporting directory structure.
"""

import os

def create_reporting_directory():
    """Create the reporting directory and add a README."""
    
    # Create the reporting directory
    reporting_dir = "reporting"
    
    try:
        os.makedirs(reporting_dir, exist_ok=True)
        print(f"‚úÖ Created directory: {reporting_dir}")
        
        # Create a README file
        readme_content = """# Survey Automation Reports

This directory contains survey automation reports generated by the system.

## Report Format
- **Filename**: `survey_report_YYYYMMDD_HHMMSS.txt`
- **Content**: Comprehensive automation analytics including:
  - Session timing and statistics
  - Handler usage breakdown
  - Manual intervention analysis
  - Research operations summary
  - Performance metrics
  - Improvement recommendations

## Report Sections
1. **Session Timing** - Manual navigation vs automation time
2. **Summary Statistics** - Questions processed, automation rate, etc.
3. **Handler Usage** - Which question handlers were used most
4. **Manual Interventions** - When and why manual help was needed
5. **Research Operations** - Cache hits, search success rates
6. **Performance Metrics** - Questions per minute, efficiency scores
7. **Improvement Recommendations** - Suggestions for system enhancement

## Example Report Files
- `survey_report_20250630_143022.txt` - Report from June 30, 2025 at 2:30 PM
- `survey_report_20250701_091534.txt` - Report from July 1, 2025 at 9:15 AM

## Maintenance
- Reports are automatically saved here after each survey completion
- Old reports can be safely deleted or archived as needed
- Directory is automatically created if it doesn't exist
"""
        
        readme_path = os.path.join(reporting_dir, "README.md")
        with open(readme_path, 'w') as f:
            f.write(readme_content)
        print(f"‚úÖ Created README: {readme_path}")
        
        # Create a .gitkeep to ensure directory is tracked in git
        gitkeep_path = os.path.join(reporting_dir, ".gitkeep")
        with open(gitkeep_path, 'w') as f:
            f.write("# This file ensures the reporting directory is tracked in git\n")
        print(f"‚úÖ Created .gitkeep: {gitkeep_path}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error creating reporting directory: {e}")
        return False

def main():
    """Set up the reporting directory structure."""
    print("üèóÔ∏è  Setting up reporting directory...")
    
    if create_reporting_directory():
        print("\nüéâ Reporting directory setup completed!")
        print("‚úÖ Reports will now be saved to: survey_automation/reporting/")
        print("üìä Run your survey automation to generate reports!")
        return True
    else:
        print("\n‚ùå Failed to set up reporting directory")
        return False

if __name__ == "__main__":
    main()
